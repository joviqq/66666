<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd"
        default-lazy-init="true">
     <context:property-placeholder location="classpath*:/config_spring/freepaayManage.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />
     
  <!--   <import resource="mybatis-config.xml" />   -->
   
    <!-- 数据库连接池配置 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.logicalcobwebs.proxool.ProxoolDriver" />
        <property name="url" value="proxool.freepaayDB" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.freepaay.*.bean"/> 
        <!-- typeAliasesPackage 为这个包下面的所有类生成别名，在配置文件中就可以直接用类名进行引用，而不用写全路径 -->
        <!-- <property name="typeAliasesPackage" value="com.freepaay.manage.bean,com.freepaay.search" />
        <property name="mapperLocations" value="classpath:config_mybatis/*.xml" /> -->
        <property name="configLocation" value="classpath:config_spring/mybatis-config.xml" />
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations"  >
			 <array>
                <value> classpath:config_mybatis/**/*.xml</value>
            </array>
		</property>
      
        <property name="plugins">
            <array>
              <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=oracle
                            reasonable=true
                        </value>
                    </property> 
                </bean> 
               <!--  <bean class="com.github.abel533.mapperhelper.MapperInterceptor">
                    <property name="properties">
                        <value>
                            mappers=com.github.abel533.mapper.Mapper
                            ORDER=BEFORE
                           
                        </value>
                    </property>
                </bean> -->
            </array>
        </property> 
    </bean>
   <!--  <import resource="mybatis-config.xml" /> -->
    <!--  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com/freepaay/dao" />
		
		com/wondersgroup/benefit/cloud/model/core/mapper/dao
		 <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean> -->
	 <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.freepaay.**.mapper"/>
        <property name="properties">
            <value>
                ORDER=BEFORE
               <!--   mappers=tk.mybatis.mapper.common.Mapper -->
            </value>
        </property>
        <!-- 通用Mapper通过属性注入进行配置，默认不配置时会注册Mapper<T>接口
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
        -->
    </bean>
	<!--  <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.freepaay.dao"/>
        3.2.2版本新特性，markerInterface可以起到mappers配置的作用，详细情况需要看Marker接口类
        <property name="markerInterface" value="com.freepaay.mybatis.util.MyMapper"/> 
        <property name="properties">
            <value>
                ORDER=BEFORE
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        通用Mapper通过属性注入进行配置，默认不配置时会注册Mapper<T>接口
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
       
    </bean> -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory" />
        <!-- 如果想要进行批量操作可加入这个属性 -->
        <!-- <constructor-arg index="1" value="BATCH" /> -->
    </bean>

    <!-- 设定transactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 转移redis配置到spring-cache.xml中 -->
	<import resource="spring-cache.xml" />
    
    <!-- 启动包扫描功能，根据下面配置的路径扫描包成为spring的bean http://blog.csdn.net/chunqiuwei/article/details/16115135 -->
    <context:component-scan base-package="com.freepaay" use-default-filters="false">
        <context:include-filter type="regex" expression="com.freepaay.*.controller.*" />
        <context:include-filter type="regex" expression="com.freepaay.*.service.impl.*" />
        <context:include-filter type="regex" expression="com.freepaay.*.bean.*" />
        <context:include-filter type="regex" expression="com.freepaay.*.beanVo.*" />
        <context:include-filter type="regex" expression="com.freepaay.*.mapper.*" />
        <context:include-filter type="regex" expression="com.freepaay.*.util.*" />
        <context:include-filter type="regex" expression="com.freepaay.filter.*" />
        <context:include-filter type="regex" expression="com.freepaay.redis.*" />
        <context:include-filter type="regex" expression="com.freepaay.job.*" />
    </context:component-scan>

    <!-- <bean id="springContextUtil" class="com.freepaay.common.SpringContextUtil" /> -->
    
    <!-- 定时任务 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>
	<!-- Dubbo配置 -->
    <import resource="dubbo-provider.xml" />
    <import resource="dubbo-provider-list/*.xml" />
   
	<task:annotation-driven />
	
</beans>